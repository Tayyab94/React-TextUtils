{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","value","onClick","toggle","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","onChange","event","target","rows","style","backgroundColor","color","disabled","length","toUpperCase","toLowerCase","showAlert","text1","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","newTest","split","join","trim","filter","element","toFixed","prototype","PropTypes","string","isRequired","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","WordCapitalize","msg","About","WebTitle","App","setMode","_useState3","_useState4","setAlert","ShowAlertFunction","message","setTimeout","Components_Alert","react_router","exact","path","Components_About","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.85d5645e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 \">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.about}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n\r\n          <div\r\n            className={`form-check text-${\r\n              props.mode === \"light\" ? \"dart\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value=\"\"\r\n              id=\"flexCheckIndeterminate\"\r\n              onClick={props.toggle}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexCheckIndeterminate\"\r\n            >\r\n              Indeterminate checkbox\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Welcome\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"You dummy Text is here\");\r\n\r\n  const handleUpClick = () => {\r\n    if (text !== null && text.length > 0) {\r\n      setText(text.toUpperCase());\r\n    }\r\n  };\r\n\r\n  const TextChanging = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const HandleLowerClick = () => {\r\n    if (text !== null && text.length > 0) {\r\n      setText(text.toLowerCase());\r\n      props.showAlert(\"Converted to lowercase\", \"info\");\r\n    }\r\n  };\r\n\r\n  const HandleClearText = () => {\r\n    if (text !== null && text.length > 0) {\r\n      setText(\"\");\r\n      props.showAlert(\"Reset All Text\", \"danger\");\r\n    }\r\n  };\r\n\r\n  // this function is using to Copy the whole text from the input box.\r\n  const HandleCopy = () => {\r\n    if (text !== null && text.length > 0) {\r\n      var text1 = document.getElementById(\"mytext\");\r\n      text1.select();\r\n      navigator.clipboard.writeText(text1.value);\r\n      document.getSelection().removeAllRanges(); // This line of code is using to re-selct\r\n      props.showAlert(\"Show Text Copied Now\", \"success\");\r\n    }\r\n  };\r\n\r\n  // This function is Removing the extra spaces\r\n  const HandleExtraSpaces = () => {\r\n    var newTest = text.split(/[ ]+/);\r\n    setText(newTest.join(\" \"));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h3>{props.heading}</h3>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n            Example textarea\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={TextChanging}\r\n            id=\"mytext\"\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Upper Case\r\n        </button>{\" \"}\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-2 my-2\"\r\n          onClick={HandleLowerClick}\r\n        >\r\n          Lower Case Convert\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-2 my-2\"\r\n          onClick={HandleClearText}\r\n        >\r\n          Reset\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-2 my-2\"\r\n          onClick={HandleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-2 my-2\"\r\n          onClick={HandleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h5 className=\"text-info\">Pragraph Summary</h5>\r\n        <p>\r\n          {text.trim() === \"\" ? 0 : text.split(\" \").length} Words &{\" \"}\r\n          {text.length} Charactors |{\" \"}\r\n          {(\r\n            0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          ).toFixed(1)}{\" \"}\r\n          Minutes Read\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <h3 className=\"text-success\">Preview </h3>\r\n        <p>{text.length > 0 ? text : \"Nothing to Preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const WordCapitalize = (word) => {\r\n    var lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{WordCapitalize(props.alert.type)}!</strong> {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h2>This is About Componet</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport \"./appa.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\nimport About from \"./Components/About\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nlet WebTitle = \"TextUtils\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const ShowAlertFunction = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleFunction = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n\n      ShowAlertFunction(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n\n      ShowAlertFunction(\"Light Mode has been enabled\", \"info\");\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <div>\n          <Navbar\n            title={WebTitle}\n            about=\"About Me\"\n            toggle={toggleFunction}\n            mode={mode}\n          />\n\n          <Alert alert={alert} />\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <div className=\"container my-3\"></div>\n          <Routes>\n            <Route exact path=\"/about\" element={<About />}></Route>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  showAlert={ShowAlertFunction}\n                  heading=\"Enter the Text to analyse\"\n                  mode={mode}\n                />\n              }\n            ></Route>\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}